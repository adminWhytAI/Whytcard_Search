# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/reference/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/guides/orchestrate/jobs-steps/#jobs-overview & https://circleci.com/docs/reference/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/guides/execution-managed/executor-intro/ & https://circleci.com/docs/reference/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/base:current

    # Add steps to the job
    # See: https://circleci.com/docs/guides/orchestrate/jobs-steps/#steps-overview & https://circleci.com/docs/reference/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/guides/orchestrate/workflows/ & https://circleci.com/docs/reference/configuration-reference/#workflows
workflows:
  say-hello-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - say-hello
# As simple as adding the below to your config to get started
- uses: qltysh/qlty-action/coverage@v2
  with:
    token: {{secrets.QLTY_COVERAGE_TOKEN}}
    files: reports/lcov.info
- run:
    name: Plan a deploy
    command: circleci run release plan --target-version=<some-version-name>

# Your job here doing the actual deployment
- run:
    name: Update a deploy to SUCCESS
    command: circleci run release update --status=SUCCESS 
    when: on_success 
- run:
    name: Update planned deploy to FAILED
    command: circleci run release update --status=FAILED 
    when: on_fail
- run:
    name: Run Codacy Coverage Reporter
    command: bash <(curl -Ls https://coverage.codacy.com/get.sh)
